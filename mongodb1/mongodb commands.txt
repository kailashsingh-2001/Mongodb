mongodb commands

showdbs
use dbs


showcollections



db.createCollection(collection name)
db.collectionname.insertOne({})
db.collectionmany([{},{},{}])
db.collectionname.find()

db.collectionname.drop();
db.users.find().count() to know how many object or documents are there.

db.users.find({role:'admin'})
db.users.find({gender:"Female"})

db.users.find({username:"Sumantrao"})


db.users.find({skill:python})

db.users.find({role:"customer",lastname:"verma"})



Q.5Find all documents where the user's first name starts with "R".
==>db.users.find({firstName:/^R/})
Q6.find all the documents where username starts with p
==>db.users.find({firstName:/^P/})

Q13.Find all documents where the user has the skill "Java" but not "Python".
==>db.users.find({skills:{$all:["Java","Python"]}})
q14.find all documents where the user has the skill "javascript" and python?
==>db.users.find({skills:{$all:["Javascript","Python"]}})
Q15.find all documents where all the user skills "java","react"
==>db.users.find({skills:{$all:["Java","React"]}})


Q16.Retrieve all documents where the user's first name is "Aryan" or the last name is "Gupta".
==>db.users.find({$or:[{firstName:"Aryan"},{lastName:"Gupta"}]})
db.users.find({$or:[{city:"Kolkata"},{gender:"Female"}]})

Q17.Find all documents where the user has the skill "Java" but not "Python".
==>db.users.find({skills:"Java",skills:{$ne:"Python"}})
Q18.Find all documents where the user has the skill "Java" but not "Python".
==> db.users.find({$and:[{skills:"React"},{skills:{$ne:"Java"}}]})
Q19.Retrieve all documents where the user's last name is "Sharma" and the role is "customer".
==>db.users.find({$and})
Q20.Find all documents where the user has exactly three skills.(aggregation pipeline)
==> db.users.find({skills:{$size:3}})
21

db.users.find({firstName:/^S/,role:"admin"})


Retrieve all documents where the user's role is not specified.
==>db.users.find({role:{$exists:false}})
//

//



Find all documents where the user has at least four skills.
==>atleast == kam se kam (greater than equals)
==>atmost == zada se zada(less than equals)
==>db.users.find({$expr: {$gte: [{ $size: "$skills" }, 4]}})





Retrieve all documents where the user's role is "customer" and the user has no specified skills.

==>

Find all documents where the user's email contains "regexsoftware.com".
==>db.users.find({useremail:/regexsoftware.com/})

db.users.find({username:/a$/})user name ends with a
Retrieve all documents where the user's email does not contain "gmail.com".
==>db.users.find({useremail:{$not:/gmail.com$/}})

db.users.find({city:"New Delhi",age:{$gt:26}})




                                                                                                                                                    

